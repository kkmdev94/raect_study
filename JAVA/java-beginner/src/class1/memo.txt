Class = '틀' 또는 '설계도'. 클래스는 객체가 가져야 할 속성(변수)과 기능(메서드)를 정의한다. 예를 들어 클래스는 속성으로

객체 - Object
클래스에서 정의한 속성과 기능을 가진 실체이다. 객체는 서로 독립적인 상태를 가진다.
예로 문제풀이시 student1은 학생1의 속성을 가지는 객체이고, student2는 학생2의 속성을 가지는 객체이다.
student1과 student2는 같은 클래스에서 만들어졌지만, 서로 다른 객체이다.
위 설명처럼 객체는 독립적인 상태를 가진다.

인스턴스 - Instance
특정 클래스로부터 생성된 객체를 의미한다. 그래서 객체와 인스턴스라는 용어는 자주 혼용된다. 인스턴스는 주로 객체가 어떤 클래스에 속해 있는지 강조할 떄 사용한다.
예를 들자면 student1 객체는 Student 클래스의 인스턴스다. 라고 표현한다.

둘다 의미는 같은데 내가 이해한 바로는

예시를 들어 student1을 명시적으로 가르킬때 혹은 student1을 말할 때는 객체라고 하고, Student의 student1 이런식으로 클래스와 연결지어서 말을 할때는 인스턴스라는 단어를 쓰면 될 것 같다.

하지만 결국 둘다 같은 의미라 굳이 구분을 지어가면서까지 할 필요는 없다.


ClassStart4에서 주의

변수에는 인스턴스 자체가 들어있는 것이 아니다! 인스턴스의 위치를 가르키는 참조값이 들어있을 뿐이다! 따라서 대입(=)시에 인스턴스가 복사되는 것이 아니라 참조값만 복사된다!

이게 무슨 말이냐면
        students[0] = student1;
        students[1] = student2;

위의 대입에서 student1은 Student 클래스의 인스턴스(ex=String name/int age/in grade)의 값을 복사하는게 아닌 인스턴스를 찾아갈 수 있는 주소값을 대입할 뿐이다.
그래서 students[0]에는 student1의 주소가 복사되는 것이고 그 주소지를 찾아가서 .name / .age / .grade 를 가져와서 사용한다.

여기서 이전에 명시됬던 자바에서 대입은 항상 변수에 들어 있는 값을 복사해서 전달한다! <- 이게 다시 중요시 되는게
위 로직에서 student1 은 ClassStart4에서 작성한것 처럼
     Student student1 = new Student(); 즉, Student 클래스의 인스턴트이고 student1은 Student 클래스의 1번 주소값을 가지고 있는 것이다. 그래서
students[0] = student1 에서 student1의 주소값(참조값)이 복사된 것이다. 절대! '=' 를 한다해서 인스턴스가 복사되는 것이 아니다.


--정리
  - 클래스에 소속된 변수를 멤버 변수 || 필드라고 한다.
  - 클래스와 사용자 정의 타입
     1) 사용자가 직접 정의하는 사용자 정의 타입을 만드려면 설계도가 필요한데 이 설계도가 클래스다.
     2) 설계도를 이용해 실제 메모리에 만들어진 실체를 객체 또는 인스턴스라고 한다.
     3) 클래스를 통해 사용자가 원하는 종류의 데이터 타입을 마음껏 정의 할 수 있다.
  - 사용자 정의 타입에 변수를 받을 수 있다.
  - 객체를 생성할 때 마다 참조값이 생긴다.

  - 사용 방법은 .을 사용

  - 클래스는 객체를 생성하기 위한 '틀' 또는 '설계도'
    ** 틀 : 붕어빵 틀을 생각해 보면 붕어빵 틀은 붕어빵이 아님, 이렇게 생긴 붕어빵이 나왔으면 좋겟다고 만드는 틀인거지 실제로 먹을 수 있는 것이 아니다.
            먹을 수 있는 팥붕,슈붕,피붕 등 먹을 수 있것들을 객체 또는 인스턴스라고 한다.
    1) 객체와 인스턴스가 있지만 둘이 비슷
    2) 인스턴스 = 보통 관계, 소속된 관계를 설명할 때 많이 쓰임, 객체가 어떤 클래스에 속해 있는지 강조할 때 사용
    3) 실무에서는 구분 안함 객체나 인스턴스는 둘 다 똑같은 말이다라고 생각하면 편하다.


  - 객체나 배열은 참조값을 반환한다 그래서 참조값을 항상 어딘가에 담아 둬야 하기에 new를 쓴다.
