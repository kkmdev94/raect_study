HashSet 과 LinkedHashSet의 차이는

HashSet :
    구현: 해시 자료 구조를 사용해서 요소를 저장한다.
    순서: 요소들은 특정한 순서 없이 저장된다. 즉, 요소를 추가한 순서를 보장하지 않는다.
    시간 복잡도: HashSet의 주요 연산(추가, 삭제, 검색)은 평균적으로 O(1)시간 복잡도를 가진다.
    용도: 데이터의 유일성만 중요하고, 순서가 중요하지 않은 경우에 적합하다.

LinkedHashSet :
    구현 : LinkedHashSet은 HashSet에 연결 리스트를 추가해서 요소들의 순서를 유지한다.
    순서 : 요소들은 추가된 순서대로 유지된다. 즉, 순서대로 조회 시 요소들이 추가된 순서대로 반환된다.
    시간 복잡도: LinkedHashSet도 HashSet과 마찬가지로 주요 연산에 대해 평균 O(1)시간 복잡도를 가진다.
    용도 : 데이터의 유일성과 함께 삽입 순서를 유지해야 할 때 적합하다.
    참고 : 연결 링크를 유지해야 하기 때문에 HashSet보다는 조금 더 무겁다


즉, LinkdeHashSet은 HashSet에 연결 링크만 추가한 것이다
HashSet에 LinkdeHashSet를 합친 것으로 이해하면 되는데 이 연결링크는 데이터를 입력한 순서대로 연결하며,
head(first)를 통해 순서대로 따라가면 입력 순서대로 데이터를 순회할 수 있으며 tail(last)를 가지고 있고, 양방향으로 연결된다.

index안에 노드를 집어 넣는것으로 생각하면 되고 선생님 강의 8번 set 강의 세션을 보면 그림으로 표시가 잘 되어있다.