Map과 Set은 거의 같다.

Map에서 Value만 비워두면 Set으로 사용 가능하다.

----------------------------------------------Copilto과의 질의 응답을 통한 이해한 결과.------------------------------------------------------
Q.아하 근데 그러면 if문에서 !txt.containsKey(split[i])를 통해 key값에 존재하지 않는 애들만 집어 넣게 해놧는데 그러면 우연치 않게 맞은 이유가 매개변수가 1개가 증가해서 우연치 않게 맞은거였던거야?
A.
네, 정확히 이해하셨습니다! if (!txt.containsKey(split[i])) 조건은 Map에 없는 단어만 추가하는 로직이기 때문에, count 값이 순서대로 증가하며 새로운 단어에만 할당됩니다.

이 코드가 우연히 "정답처럼 보이는 이유"는 단순히 각 단어를 Map에 한 번만 추가하는 방식 때문이에요. 결과적으로 count가 1씩 증가하며 단어마다 고유 값을 할당하게 되었죠.
하지만, 이는 단어의 등장 횟수를 계산하는 로직이 아니라, 단어를 "고유한 키로 등록"하는 로직입니다.

즉:
목적은 단어 등장 횟수를 세는 것이었지만,

실제로는 "각 단어에 고유 키를 부여"하는 코드가 작성된 것이고,

요구했던 정답 형태와 우연히 일치해 보인 것입니다.

하지만 정확한 동작 원리를 보면 이 로직은 등장 횟수를 세지는 않기 때문에, 다시 실행할 경우 요구사항에 맞지 않을 가능성이 충분히 존재합니다.